import { useDispatch, useSelector } from "react-redux"
import { useHistory } from "react-router";
import CheckFormToPerson from "../../CheckFormToPerson/CheckFormToPerson";
import PresentForm from "../../presents/PresentForm/PresentForm";
import { useState, useEffect } from "react";
import { getExampleForm, sendFormToPerson } from "../../../redux/actions/checkFormToPerson";
import { SentForm } from "../../SentForm/SentForm";
import { Button } from "reactstrap";

export default function Home() {

  const [showForm, setShowForm] = useState(false)
  const dispatch = useDispatch()

  useEffect(() => {
    setShowForm(false)
    dispatch(getExampleForm(false))
  }, [])

    const user = useSelector(state => state.user);
    const exampleForm = useSelector(state => state.exampleForm);
    const checkform = useSelector(state => state.checkform)
    console.log('checkform', checkform)

    const showAnswerFromBack = useSelector(state => state.showAnswerFromBack);
    console.log('showAnswerFromBack', showAnswerFromBack)

    const history = useHistory()

  return (
    <>
    <h1>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–∞–π—Ç –ø–æ–¥–∞—Ä–∫–æ–≤ Present Simple!</h1>
    <div>
    <h2>–•–æ—Ç–∏—Ç–µ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –∂–µ–ª–∞–Ω–∏–π –ø–æ–¥–∞—Ä–∫–æ–≤?</h2>
     <button onClick={() => user ? history.push('/mywishlist') : history.push('/auth/signup')}>–û—á–µ–Ω—å —Ö–æ—á—É!!!</button>
    </div>
    <div>
    <h2>–í—ã–±–∏—Ä–∞–µ—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –ø–æ–¥–∞—Ä–∏—Ç—å?</h2>
     <button onClick={() => setShowForm(true)}>–î–∞</button>
    </div>
    {showForm ?
      <CheckFormToPerson/>
      : '' }
     {/* <WishListPerson/> */}
    {exampleForm ?
    <>
    <h2>–ì–æ—Ç–æ–≤—ã –ª–∏ –í—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É —ç—Ç—É –∞–Ω–∫–µ—Ç—É?</h2>
    <div>
      <form className="d-flex flex-column align-items-center bg-light text-dark p-3 border rounded-3">
    <h2>–£—Ä–∞! –ö—Ç–æ-—Ç–æ –∏–∑ —Ç–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö –∏–ª–∏ –∑–Ω–∞–∫–æ–º—ã—Ö —Ö–æ—Ç—è—Ç –ø–æ–¥–∞—Ä–∏—Ç—å –í–∞–º –ø–æ–¥–∞—Ä–æ–∫! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ø–æ–ª–µ–π</h2>
    {/* <SentForm/> */}
    <PresentForm/>
    <Button onCLick={() => dispatch(sendFormToPerson(checkform))}>–û—Ç–ø—Ä–∞–≤–ª—è–µ–º üìß</Button>
    <Button onCLick={() => dispatch(getExampleForm(false))}>–ú–Ω–µ –Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è üòû</Button>
    {showAnswerFromBack ?
    <h2>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ üí´</h2>
    :
    <h2>–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å üò¢</h2>}
    </form>
    </div>
    </>
     : '' }
    </>
  )
}
